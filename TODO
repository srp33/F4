[Me] Change RegExFilter to LikeFilter.
[Me] Support OR logic for filtering.
[Me] Add parallelization support in Parser. TestParseTall.py
  Output file should be in same order as F4 file.
  Make query criteria identical to what we are using in the paper.
[Me] Support compression
  Make compression an option in convert function in Builder2.py.
  Make compression an option in parse function. Autodetect?
  Add whitespace buffer at the end of each line. Use max(max_line_sizes). __format_string_as_fixed_width(x, size)
    Specify this in .ll file.
[Me] Test parallelization/compression building/parsing on tall.tsv.gz.
  Remove print statements and import datetime from Builder2.py.
[Me] In DataSetBuilder, add transposed (& compressed) optionf or index columns.
  Provide an option where the user can specify which rows will be searched (thus reducing # of transposed rows that must be stored). Before querying these, make sure they exist.
[Me] Remove ConvertTsvToFixedWidthFile3.py, TestBuild*.py?, TestParse*.py?
[Me] Add documentation for convert_delimited_file_to_f4. Mention .gz file support.
  Mention that if they specify tmp_dir_path, we assume that it is empty. It will not work if it is not.
[Me] Test building and parsing on gnomad/CADD files.
  gnomad: See notes in TickTick.
  CADD: Compare against tabix. We can also compare it in terms of size.
  Move to test.sh and generate formal statistics on it.
[Me] Move functions out of Helper.py. If you keep any, document them.
[Me] Remove commented code and complete all TODO items in code.

[MeLater] Store discrete data in separate table from numeric? The first column is a JSON dictionary that maps Unicode characters to unique values in the column. This could save a lot of disk space in most cases.
[MeLater] Support joins.
[MeLater] Look at pandas for other functionality that might make sense to support.
  Add to student's TODO list.
[MeLater] Set up readthedocs.

[??] Rework the format so that everything is stored in a single file.
  Modify constructor of Parser.py accordingly.

[Student] Add function to DataSetParser to return all unique values for a discrete column.
  Use this functionality in DataSetBuilder.
  Add documentation.
  Add validation. (Generalize the code for making sure column name is valid.)
[Student] Add function to DataSetParser to get summary statistics for a numeric column.
[Student] Support in_file_delimiter="," and out_file_type="csv"
  Change in_file_delimiter to in_file_type?
  Make sure exception when invalid value specified.
[Student] Support date columns.
[Student] Support conversion from pandas DataFrame to F4 and vice versa.
[Student] Provide explicit support for VCF format?
[Student] Provide a way to stream a file as input and/or output?

[StudentLater] Translate to Rust. Or create Rust/Python wrapper. https://crates.io/crates/pyo3
  https://www.youtube.com/watch?v=Ygk0IMbu2nY
